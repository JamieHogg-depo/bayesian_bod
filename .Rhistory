temp <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
base_legend <- get_legend(temp)
base_boxes <- base + addBoxLabel(1, color = "black", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
lay <- rbind(c(2,1,1),
c(1,1,1),
c(1,1,1),
c(3,3,3))
year_plt_list[[t]] <- grid.arrange(grobs = list(base_boxes, perth_inset, base_legend),
layout_matrix  = lay,
top = textGrob(as.character(seq_years[t]),gp=gpar(fontsize=20)))
# LGA_CHD_Female ASYLL
year_plt_list <- list()
seq_years <- unique(df_list$`LGA_CHD_Female ASYLL`$year)
# loop over years
for(t in 1:6){
# range of posterior medians
col_range <- range(map_obj$female_yll$point)
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = "grey", size = 0.1)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B", limits = col_range)+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
temp <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
base_legend <- get_legend(temp)
# Base map with boxes
#base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
base_boxes <- base + addBoxLabel(1, color = "black", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(2,1,1),
c(1,1,1),
c(1,1,1))
year_plt_list[[t]] <- grid.arrange(grobs = list(base_boxes, perth_inset),
layout_matrix  = lay,
top = textGrob(as.character(seq_years[t]),gp=gpar(fontsize=20)))
# Keep track
message("Finished ", t)
}
lay <- rbind(c(1,2,3),
c(4,5,6),
c(7,7,7))
?grid.arrange
full_inset_plt <- arrangeGrob(grobs = c(year_plt_list, list(base_legend)), layout_matrix  = lay)
plot(full_inset_plt)
jsave(plot = full_inset_plt, filename = "female_chd_asyll.png", base_folder = "plts", square = F)
# LGA_CHD_Female ASYLL
year_plt_list <- list()
seq_years <- unique(df_list$`LGA_CHD_Female ASYLL`$year)
# loop over years
for(t in 1:6){
# range of posterior medians
col_range <- range(map_obj$female_yll$point)
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = "grey", size = 0.1)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B", limits = col_range)+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 20),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
temp <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
base_legend <- get_legend(temp)
# Base map with boxes
#base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
base_boxes <- base + addBoxLabel(1, color = "black", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(2,1),
c(1,1))
year_plt_list[[t]] <- arrangeGrob(grobs = list(base_boxes, perth_inset),
layout_matrix  = lay,
top = textGrob(as.character(seq_years[t]),gp=gpar(fontsize=20)))
# Keep track
message("Finished ", t)
}
# Final plot
lay <- rbind(c(1,2,3),
c(4,5,6),
c(7,7,7))
full_inset_plt <- arrangeGrob(grobs = c(year_plt_list, list(base_legend)), layout_matrix  = lay)
jsave(plot = full_inset_plt, filename = "female_chd_asyll.png", base_folder = "plts", square = F)
# LGA_CHD_Female ASYLL
year_plt_list <- list()
seq_years <- unique(df_list$`LGA_CHD_Female ASYLL`$year)
# loop over years
for(t in 1:6){
# range of posterior medians
col_range <- range(map_obj$female_yll$point)
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = "grey", size = 0.1)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B", limits = col_range)+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 10),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
temp <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
base_legend <- get_legend(temp)
# Base map with boxes
#base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
base_boxes <- base + addBoxLabel(1, color = "black", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
theme(panel.border = element_rect(colour = "black", size=0.2, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(2,1),
c(1,1))
year_plt_list[[t]] <- arrangeGrob(grobs = list(base_boxes, perth_inset),
layout_matrix  = lay,
top = textGrob(as.character(seq_years[t]),gp=gpar(fontsize=10)))
# Keep track
message("Finished ", t)
}
# Final plot
lay <- rbind(c(1,2,3),
c(4,5,6),
c(7,7,7))
full_inset_plt <- arrangeGrob(grobs = c(year_plt_list, list(base_legend)), layout_matrix  = lay)
jsave(plot = full_inset_plt, filename = "female_chd_asyll.png", base_folder = "plts", square = F)
# LGA_CHD_Female ASYLL
year_plt_list <- list()
seq_years <- unique(df_list$`LGA_CHD_Female ASYLL`$year)
# loop over years
for(t in 1:6){
# range of posterior medians
col_range <- range(map_obj$female_yll$EP)
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = EP))+
theme_void()+
geom_sf(col = "grey", size = 0.1)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B", limits = col_range)+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 10),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
temp <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
base_legend <- get_legend(temp)
# Base map with boxes
#base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
base_boxes <- base + addBoxLabel(1, color = "black", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
theme(panel.border = element_rect(colour = "black", size=0.2, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(2,1),
c(1,1))
year_plt_list[[t]] <- arrangeGrob(grobs = list(base_boxes, perth_inset),
layout_matrix  = lay,
top = textGrob(as.character(seq_years[t]),gp=gpar(fontsize=10)))
# Keep track
message("Finished ", t)
}
# Final plot
lay <- rbind(c(1,2,3),
c(4,5,6),
c(7,7,7))
full_inset_plt <- arrangeGrob(grobs = c(year_plt_list, list(base_legend)), layout_matrix  = lay)
jsave(plot = full_inset_plt, filename = "female_chd_asyll.png", base_folder = "plts", square = F)
# LGA_CHD_Female ASYLL
year_plt_list <- list()
seq_years <- unique(df_list$`LGA_CHD_Female ASYLL`$year)
# loop over years
for(t in 1:6){
# range of posterior medians
col_range <- range(map_obj$female_yll$point)
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = "grey", size = 0.1)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B", limits = col_range)+
labs(fill = "ASYLL")+
theme(legend.position = "none",
text = element_text(size = 10),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
temp <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
base_legend <- get_legend(temp)
# Base map with boxes
#base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
base_boxes <- base + addBoxLabel(1, color = "black", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
theme(panel.border = element_rect(colour = "black", size=0.2, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(2,1),
c(1,1))
year_plt_list[[t]] <- arrangeGrob(grobs = list(base_boxes, perth_inset),
layout_matrix  = lay,
top = textGrob(as.character(seq_years[t]),gp=gpar(fontsize=10)))
# Keep track
message("Finished ", t)
}
# Final plot
lay <- rbind(c(1,2,3),
c(4,5,6),
c(7,7,7))
full_inset_plt <- arrangeGrob(grobs = c(year_plt_list, list(base_legend)), layout_matrix  = lay)
jsave(plot = full_inset_plt, filename = "female_chd_asyll.png", base_folder = "plts", square = F)
## END SCRIPT ## --------------------------------------------------------------
# LGA_CHD_Female ASYLL
year_plt_list <- list()
seq_years <- unique(df_list$`LGA_CHD_Female ASYLL`$year)
# loop over years
for(t in 1:6){
# range of posterior medians
col_range <- range(map_obj$female_yll$point)
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = "grey", size = 0.1)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B", limits = col_range)+
theme(legend.position = "none",
text = element_text(size = 10),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
temp <- base +
labs(fill = "ASYLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
base_legend <- get_legend(temp)
# Base map with boxes
#base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
base_boxes <- base + addBoxLabel(1, color = "black", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
theme(panel.border = element_rect(colour = "black", size=0.2, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(2,1),
c(1,1))
year_plt_list[[t]] <- arrangeGrob(grobs = list(base_boxes, perth_inset),
layout_matrix  = lay,
top = textGrob(as.character(seq_years[t]),gp=gpar(fontsize=10)))
# Keep track
message("Finished ", t)
}
# Final plot
lay <- rbind(c(1,2,3),
c(4,5,6),
c(7,7,7))
full_inset_plt <- arrangeGrob(grobs = c(year_plt_list, list(base_legend)), layout_matrix  = lay)
jsave(plot = full_inset_plt, filename = "female_chd_asyll.png", base_folder = "plts", square = F)
## END SCRIPT ## --------------------------------------------------------------
source("src/ms.R")
j <- 1
temp <- strsplit(str_replace(names(asyll_list)[j], " ASYLL", ""), split= '_', fixed=TRUE)
condition <- temp[[1]][2]
sex <- temp[[1]][3]
file_index <- str_extract(names(asyll_list)[j], "(?<=LGA_).*?(?=\\s)")
rm(temp)
# Progress
message("Condition: ", condition, "\nSex: ", sex)
# select temporary dataset
df_temp <- left_join(asyll_list[[j]],lga$seifa_ra, by = c("geography_no" = "LGA_Code", "year" = "Year"))
glimpse(df_temp)
with(df_temp, table(compared_to_null, RA_Name))
with(df_temp, prop.table(table(compared_to_null, RA_Name)))
df_temp %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = 1:nrow(.)))+
geom_errorbar(color = "grey")+
geom_point()
df_temp %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = 1:nrow(.)))+
geom_errorbar(color = "grey")+
geom_point()+
facet_grid(.~year)
df_temp %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = 1:nrow(.)))+
geom_errorbar(color = "grey")+
geom_point()+
facet_wrap(.~year)
df_temp %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = M_id))+
geom_errorbar(color = "grey")+
geom_point()+
facet_wrap(.~year)
# create caterpillar plot
df_temp %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = M_id))+
theme_bw()+
geom_errorbar(color = "grey")+
geom_point()+
facet_wrap(.~year)
# create caterpillar plot
df_temp %>%
group_by(year) %>%
mutate(x_id = order(point)) %>% ungroup() %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = x_id))+
theme_bw()+
geom_errorbar(color = "grey")+
geom_point()+
facet_wrap(.~year)
# create caterpillar plot
df_temp %>%
group_by(year) %>%
mutate(x_id = sort(point)) %>% ungroup() %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = x_id))+
theme_bw()+
geom_errorbar(color = "grey")+
geom_point()+
facet_wrap(.~year)
# create caterpillar plot
df_temp %>%
group_by(year, M_id) %>%
mutate(x_id = order(point)) %>% ungroup() %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = x_id))+
theme_bw()+
geom_errorbar(color = "grey")+
geom_point()+
facet_wrap(.~year)
# create caterpillar plot
df_temp %>%
group_by(year) %>%
mutate(x_id = order(point)) %>% ungroup() %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = x_id))+
theme_bw()+
geom_errorbar(color = "grey")+
geom_point()+
facet_wrap(.~year)
df_temp %>%
group_by(year) %>%
mutate(x_id = order(point)) %>% ungroup()
# create caterpillar plot
df_temp %>%
group_by(year) %>%
mutate(x_id = order(point)) %>% ungroup() %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = M_id))+
theme_bw()+
geom_errorbar(color = "grey")+
geom_point()+
facet_wrap(.~year)
# create caterpillar plot
df_temp %>%
group_by(year) %>%
mutate(x_id = order(point)) %>% ungroup() %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = M_id))+
theme_bw()+
geom_errorbar(color = "grey")+
geom_point()+
facet_wrap(.~year)+
labs(y = "ASYLL",
x = "")
out <- df_temp %>%
group_by(year) %>%
mutate(x_id = order(point)) %>% ungroup() %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = M_id))+
theme_bw()+
geom_errorbar(color = "grey")+
geom_point()+
facet_wrap(.~year)+
labs(y = "ASYLL",
x = "")
jsave(plot = out, filename = paste0("caterpillar_", file_index, "_ASYLL.png"),
base_folder = "plts", square = T)
source("src/ms.R")
## Age-standardised YLLs ## ----------------------------------------------------
for(j in 1:length(asyll_list)){
# get specs
temp <- strsplit(str_replace(names(asyll_list)[j], " ASYLL", ""), split= '_', fixed=TRUE)
condition <- temp[[1]][2]
sex <- temp[[1]][3]
file_index <- str_extract(names(asyll_list)[j], "(?<=LGA_).*?(?=\\s)")
rm(temp)
# Progress
message("Condition: ", condition, "\nSex: ", sex)
# select temporary dataset
df_temp <- left_join(asyll_list[[j]],lga$seifa_ra, by = c("geography_no" = "LGA_Code", "year" = "Year"))
# create caterpillar plot
out <- df_temp %>%
group_by(year) %>%
mutate(x_id = order(point)) %>% ungroup() %>%
ggplot(aes(y = point, ymin = lower, ymax = upper,
x = M_id))+
theme_bw()+
geom_errorbar(color = "grey")+
geom_point()+
facet_wrap(.~year)+
labs(y = "ASYLL",
x = "")
jsave(plot = out, filename = paste0("caterpillar_", file_index, "_ASYLL.png"),
base_folder = "plts", square = T)
}
