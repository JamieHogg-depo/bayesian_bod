c(1,1,1),
c(1,1,1))
full_inset_plt <- grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay)
jsave(plot = full_inset_plt, filename = "female_chd.png", base_folder = "plts", square = F)
map_obj$female_yll
# base map - no legend
base <- map_obj$female_yll %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = NA)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B")+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))+
facet_grid(.~T_id)
map_obj$female_yll %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = NA)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B")+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))+
facet_grid(.~T_id)
map_obj$female_yll %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = NA)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B")+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))+
facet_wrap(.~T_id)
# base map - no legend
base <- map_obj$female_yll %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = NA)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B")+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))+
facet_wrap(.~T_id)
base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
base_legend + addBoxLabel(1, color = "green", size = 0.2)
# base map_with legend
base_legend <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
base_legend + addBoxLabel(1, color = "green", size = 0.2)
base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
labs(title = lims$inset_labs[1])+
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
year_plt_list <- list()
# loop over years
for(t in 1:length(unique(map_obj$female_yll$M_id))){
# base map - no legend
base <- map_obj$female_yll %>%
filter(M_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = NA)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B")+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
base_legend <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
# Base map with boxes
base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
labs(title = lims$inset_labs[1])+
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(1,1,1),
c(1,1,1),
c(2,1,1))
year_plt_list[t] <- grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay)
# Keep track
message("Finished ", t)
}
warnings()
map_obj$female_yll %>%
filter(M_id == t)
map_obj$female_yll %>%
filter(T_id == t)
t = 1
map_obj$female_yll %>%
filter(T_id == t)
year_plt_list <- list()
# loop over years
for(t in 1:length(unique(map_obj$female_yll$M_id))){
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = NA)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B")+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
base_legend <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
# Base map with boxes
base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
labs(title = lims$inset_labs[1])+
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(1,1,1),
c(1,1,1),
c(2,1,1))
year_plt_list[[t]] <- grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay)
# Keep track
message("Finished ", t)
}
# Final plot
lay <- rbind(c(1,2,3),
c(4,5,6))
full_inset_plt <- grid.arrange(grobs = year_plt_list, layout_matrix  = lay)
year_plt_list <- list()
# loop over years
for(t in 1:length(unique(map_obj$female_yll$T_id))){
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = NA)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B")+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
base_legend <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
# Base map with boxes
base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
labs(title = lims$inset_labs[1])+
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(1,1,1),
c(1,1,1),
c(2,1,1))
year_plt_list[[t]] <- grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay)
# Keep track
message("Finished ", t)
}
# Final plot
lay <- rbind(c(1,2,3),
c(4,5,6))
full_inset_plt <- grid.arrange(grobs = year_plt_list, layout_matrix  = lay)
full_inset_plt
print(full_inset_plt)
grid.arrange(grobs = year_plt_list, layout_matrix  = lay)
year_plt_list[[1]]
print(year_plt_list[[1]])
plot(year_plt_list[[1]])
lay <- rbind(c(1,2,3),
c(4,5,6))
full_inset_plt <- grid.arrange(grobs = year_plt_list, layout_matrix  = lay)
jsave(plot = full_inset_plt, filename = "female_chd.png", base_folder = "plts", square = F)
lims
year_plt_list <- list()
# loop over years
for(t in 1:length(unique(map_obj$female_yll$T_id))){
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = "grey")+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B")+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
base_legend <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
# Base map with boxes
#base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
base_boxes <- base + addBoxLabel(1, color = "green", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(2,1,1),
c(1,1,1),
c(1,1,1))
year_plt_list[[t]] <- grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay)
# Keep track
message("Finished ", t)
}
# Final plot
lay <- rbind(c(1,2,3),
c(4,5,6))
full_inset_plt <- grid.arrange(grobs = year_plt_list, layout_matrix  = lay)
jsave(plot = full_inset_plt, filename = "female_chd.png", base_folder = "plts", square = F)
?grid.arrange
glimpse(map_obj[[1]])
glimpse(df_list[[1]])
unique(df_list$`LGA_CHD_Female ASYLL`$year)
year_plt_list <- list()
seq_years <- unique(df_list$`LGA_CHD_Female ASYLL`$year)
# loop over years
for(t in 1:6){
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = "grey", size = 0.1)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B")+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
base_legend <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
# Base map with boxes
#base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
base_boxes <- base + addBoxLabel(1, color = "green", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(2,1,1),
c(1,1,1),
c(1,1,1))
year_plt_list[[t]] <- grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = seq_years[t])
# Keep track
message("Finished ", t)
}
# Final plot
lay <- rbind(c(1,2,3),
c(4,5,6))
full_inset_plt <- grid.arrange(grobs = year_plt_list, layout_matrix  = lay)
jsave(plot = full_inset_plt, filename = "female_chd.png", base_folder = "plts", square = F)
year_plt_list[[1]]
plot(year_plt_list[[1]])
?grid.arrange
grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = seq_years[t])
arrangeGrob(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = seq_years[t])
print(arrangeGrob(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = seq_years[t]))
seq_years
t
print(arrangeGrob(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = "2015"))
print(grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = "2015"))
plot(grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = "2015"))
lay <- rbind(c(2,1,1),
c(1,1,1),
c(1,1,1))
plot(grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = "2015"))
plot(grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = textGrob("Daily QC: Blue",gp=gpar(fontsize=20,font=3))))
library(grid)
plot(grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = textGrob("Daily QC: Blue",gp=gpar(fontsize=20,font=3))))
grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = textGrob(as.character(seq_years[t]),gp=gpar(fontsize=20)))
year_plt_list <- list()
seq_years <- unique(df_list$`LGA_CHD_Female ASYLL`$year)
# loop over years
for(t in 1:6){
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = "grey", size = 0.1)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B")+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
base_legend <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
# Base map with boxes
#base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
base_boxes <- base + addBoxLabel(1, color = "green", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(2,1,1),
c(1,1,1),
c(1,1,1))
year_plt_list[[t]] <- grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = textGrob(as.character(seq_years[t]),gp=gpar(fontsize=20)))
# Keep track
message("Finished ", t)
}
# Final plot
lay <- rbind(c(1,2,3),
c(4,5,6))
full_inset_plt <- grid.arrange(grobs = year_plt_list, layout_matrix  = lay)
jsave(plot = full_inset_plt, filename = "female_chd.png", base_folder = "plts", square = F)
range(map_obj$female_yll$point)
plot(map_obj$female_yll$EP)
map_obj$female_yll %>% view()
year_plt_list <- list()
seq_years <- unique(df_list$`LGA_CHD_Female ASYLL`$year)
t< 1
t <- 1
col_range <- range(map_obj$female_yll$point)
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = "grey", size = 0.1)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B", limits = col_range)+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
base
year_plt_list[[1]] + year_plt_list[[2]]
library(patchwork)
year_plt_list[[1]] + year_plt_list[[2]]
# LGA_CHD_Female ASYLL
year_plt_list <- list()
seq_years <- unique(df_list$`LGA_CHD_Female ASYLL`$year)
# loop over years
for(t in 1:6){
# range of posterior medians
col_range <- range(map_obj$female_yll$point)
# base map - no legend
base <- map_obj$female_yll %>%
filter(T_id == t) %>%
ggplot(aes(fill = point))+
theme_void()+
geom_sf(col = "grey", size = 0.1)+
geom_sf(data = wa_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.3)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "B", limits = col_range)+
labs(fill = "YLL")+
theme(legend.position = "none",
text = element_text(size = 4),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# base map_with legend
base_legend <- base +
labs(fill = "YLL")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
# Base map with boxes
#base_boxes <- base_legend + addBoxLabel(1, color = "green", size = 0.2)
base_boxes <- base + addBoxLabel(1, color = "green", size = 0.2)
# Create list of insets
perth_inset <- base +
xlim(lims$xmin[1], lims$xmax[1]) +
ylim(lims$ymin[1], lims$ymax[1]) +
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# create full map
lay <- rbind(c(2,1,1),
c(1,1,1),
c(1,1,1))
year_plt_list[[t]] <- grid.arrange(grobs = list(base_boxes, perth_inset), layout_matrix  = lay,
top = textGrob(as.character(seq_years[t]),gp=gpar(fontsize=20)))
# Keep track
message("Finished ", t)
}
year_plt_list[[1]]+year_plt_list[[2]]
class(base)
class(year_plt_list[[1]])
